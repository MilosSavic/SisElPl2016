define Price {
 value: 1000,
 constructor: function(value){
  this.value=value;
 }
}

define Message {
    text : '',
 factor: 0,
    constructor : function(message,factor){
        this.text = message;
       this.factor = factor;
    }
}

define User {
  sportRisk: 1,
  age: 50,
  constructor: function(sportRisk,age){
    this.sportRisk = sportRisk;
    this.age = age;
  }
}

//ja samo ovako mogu da sprecim beskonacne petlje!
define AgeFired{
  fired: false,
  constructor: function(fired){
    this.fired = fired;
  }
}

define RiskFired{
  fired: false,
  constructor: function(fired){
    this.fired = fired;
  }
}

rule "sport risk"{
       priority:1,
    when {
        u:User;
       price: Price;
      fired: RiskFired !fired.fired;
    }
    then {
  console.log("Risk pravilo USERUSERUSER: ");
  modify(price,function(){this.value *= u.sportRisk;});
  modify(fired,function(){this.fired = true;});
  console.log(price.value);
   halt();
  
    }
  }

   rule "user age above 65"{
       priority:3,
    when {
        u:User u.age>65;
       price: Price;
       fired: AgeFired !fired.fired;
    }
    then {
  console.log("Age pravilo USERUSERUSER: ");
  modify(price,function(){this.value *= 2;});
  modify(fired,function(){this.fired = true;});
  console.log(price.value);
    }
  }


   rule "user age between 20 and 65"{
       priority:3,
    when {
        u:User u.age<=65 && u.age>=20;
       price: Price;
       fired: AgeFired !fired.fired;
    }
    then {
  console.log("Age pravilo USERUSERUSER: ");
  modify(price,function(){this.value *= 1;});
  modify(fired,function(){this.fired = true;});
  console.log(price.value);
  
    }
  }


   rule "user age below 20"{
       priority:3,
    when {
        u:User u.age<20;
       price: Price;
       fired: AgeFired !fired.fired;
    }
    then {
  console.log("Age pravilo USERUSERUSER: ");
  modify(price,function(){this.value /= 2;});
  modify(fired,function(){this.fired = true;});
  console.log(price.value);
  
    }
  }